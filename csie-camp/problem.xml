<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="1" short-name="csie-camp" url="https://polygon.codeforces.com/p1og0ER/erichung1113/csie-camp">
    <names>
        <name language="english" value="有趣的資訊營"/>
    </names>
    <statements>
        <statement charset="UTF-8" language="english" mathjax="true" path="statements/english/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="english" mathjax="true" path="statements/.html/english/problem.html" type="text/html"/>
    </statements>
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="" run-count="1">
        <testset name="tests">
            <time-limit>1000</time-limit>
            <memory-limit>1073741824</memory-limit>
            <test-count>33</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test method="manual" sample="true"/>
                <test method="manual" sample="true"/>
                <test method="manual" sample="true"/>
                <test cmd="gen -n=1000 -m=1000 1" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 2" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 3" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 4" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 5" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 6" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 7" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 8" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 9" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 10" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 11" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 12" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 13" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 14" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 15" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 16" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 17" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 18" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 19" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 20" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 21" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 22" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 23" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 24" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 25" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 26" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 27" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 28" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 29" method="generated"/>
                <test cmd="gen -n=1000 -m=1000 30" method="generated"/>
            </tests>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statements.ftl"/>
            <file path="files/testlib.h" type="h.g++"/>
            <file path="files/tutorial.tex"/>
        </resources>
        <executables>
            <executable>
                <source path="files/gen.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/validator.cpp" type="cpp.g++17"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker name="std::lcmp.cpp" type="testlib">
            <source path="files/check.cpp" type="cpp.g++17"/>
            <copy path="check.cpp"/>
            <testset>
                <test-count>0</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests/>
            </testset>
        </checker>
        <solutions>
            <solution tag="main">
                <source path="solutions/main.cpp" type="cpp.g++17"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>0</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list/>
    </stresses>
</problem>
